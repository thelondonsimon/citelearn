version: "3.8"
services:
  redis:
    image: redis:6-alpine
    networks:
      - deployml_network
  
  postgres:
    image: postgres:13-alpine
    restart: always
    networks:
      - deployml_network
    env_file:
      - app.env
    volumes:
      - ./db/data:/var/lib/postgresql/data
      - ./db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

  flyway:
    image: flyway/flyway:7-alpine
    command: -configFiles=/flyway/conf/flyway.config -locations=filesystem:/flyway/sql -connectRetries=60 migrate
    networks:
      - deployml_network
    volumes:
      - ./flyway/sql:/flyway/sql
      - ./flyway/conf/flyway.config:/flyway/conf/flyway.config
    depends_on:
      - postgres
    env_file:
      - app.env
  
  modelserver:
    build:
      context: ./modelserver
      dockerfile: Dockerfile-dev
    depends_on:
      - redis
    networks:
      - deployml_network
    env_file:
      - app.env
    volumes:
      - ./modelserver/app:/app
      - ./modelserver/dictionaries:/dictionaries
      - ./modelserver/models:/models

  webapi:
    build: ./webapi
    ports:
      - "8000:80"
    networks:
      - deployml_network
    depends_on:
      - redis
      - postgres
    env_file:
      - app.env
    volumes:
      - ./webapi/app:/app

  frontend:
    networks:
      - deployml_network
    depends_on: 
      - webapi
    build:
      context: ./frontend
      dockerfile: Dockerfile-dev
    ports:
      - "8080:8080"
    volumes:
       - ./frontend:/app
       - /app/node_modules
    env_file:
      - app.env

networks:
  deployml_network:
